1. 
	* Sum of all column heights
    * Sum of absolute column differences
    * Maximum height on the board
    * Number of holes on the board
2. Calculate score for every position and rotation. Do the one with best score based on:
	Hole count
	Bumpiness
	Lines Cleared

My hypothesis:
	inputs (400 nodes):
	the grid of cells and if they are used
	the grid of cells of last update and if they are used

	hidden:
	ummm what about 100 nodes

	output:
	one hot vector on which move to do with these options:
	[
		left
		right
		down
		rotate left
		rotate right
	]

After testing:
	Too many inputs - computer is lagging
	Also means pop is too low

My new hypothesis:
	Less inputs
	Same outputs

	Population of 1000

	Input 1: one hot vector of tetromino shape
	Input 2-3: x and y of tetromino
	Input 4 - a bunch: pass in the y value of the highest cell in col 0 that is used and isnt acive. Do this for every other col

	10 ish inputs

	maybe 50 hidden idk


